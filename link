#!/usr/bin/env ruby
# frozen_string_literal: true

Thread.current.name = 'main'
require 'rubygems'
require 'bundler/setup'

################################################################################

require 'json'
require 'logger'
require 'ostruct'
require 'pp'
require 'securerandom'
require 'socket'
require 'zlib'
require 'awesome_print'


require 'prometheus/client'
require 'prometheus/client/push'
$prometheus = Prometheus::Client.registry
$thread_pool_metric = Prometheus::Client::Gauge.new(:thread_count, docstring: '...')
$prometheus.register($thread_pool_metric)

# require 'active_support/core_ext'

################################################################################

SLEEP_TIME = 0.0001
LINK_ROOT = Dir.pwd

STDOUT.sync = true
# Thread.abort_on_exception = true

################################################################################

require_relative 'lib/support'
require_relative 'lib/servers'
require_relative 'lib/tasks'
require_relative 'lib/factorio'
require_relative 'lib/web_server'

$logger.level = Logger::INFO

################################################################################

trap_signals

at_exit do
  $logger.fatal(:at_exit) { 'Shutting down!' }
  Servers.shutdown!
  Storage.save
  $logger.close
end

################################################################################

require_relative 'lib/options'

################################################################################

Requests.reset

schedule_server_chats
schedule_server_command_whitelist
schedule_server_commands
schedule_server_current_research
schedule_server_id
schedule_server_logistics
schedule_server_ping
schedule_server_research
schedule_server_signals
schedule_task_prometheus
schedule_task_statistics

ThreadPool.execute

################################################################################
